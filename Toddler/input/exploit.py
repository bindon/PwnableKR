import os
from pwn import *
import subprocess

# connect
shell = ssh("input2", "pwnable.kr", 2222, "guest")
shell.set_working_directory(symlink=True)

# stage 1
# initialize param
# avoid if(argc != 100) return 0;
param = ["bindon"]*100

# avoid if(strcmp(argv['A'],"\x00")) return 0;
param[ord("A")] = "\x00"

# avoid if(strcmp(argv['B'],"\x20\x0a\x0d")) return 0;
param[ord("B")] = p32(0x0d0a20) 

# stage 2
# avoid if(memcmp(buf, "\x00\x0a\x02\xff", 4)) return 0;
with open("stage2", "w") as f:
    f.write(p32(0xff020a00))
    f.flush()
shell.upload("stage2")

# stage 3
# avoid if(strcmp("\xca\xfe\xba\xbe",
# getenv("\xde\xad\xbe\xef"))) return 0;
env = { p32(0xefbeadde): p32(0xbebafeca) }

# stage 4
with open("\x0a", "w") as f:
    f.write(p32(0))
    f.flush()
shell.upload("\x0a")

# stage 5
param[ord("C")] = "32768"

# execute binary
param[0] = "./input"
proc = shell.process(param, env=env, stderr="stage2")

# receive stage 1 clear message
print proc.recvuntil("Stage 1 clear!\n")

# stage 2
# avoid if(memcmp(buf, "\x00\x0a\x00\xff", 4)) return 0;
proc.sendline(p32(0xff000a00))

# receive stage 2 clear message
print proc.recvuntil("Stage 2 clear!\n")

# receive stage 3 clear message
print proc.recvuntil("Stage 3 clear!\n")

# receive stage 4 clear message
print proc.recvuntil("Stage 4 clear!\n")

# stage 5
conn = shell.remote(shell.host, 32768)
conn.send(p32(0xefbeadde))
conn.close()

# receive stage 5 clear message
print proc.recvuntil("Stage 5 clear!\n")

# receive flag
print proc.recv()

# disconnect
proc.close()
shell.close()

# delete temp files
os.remove("stage2")
os.remove("\x0a")
